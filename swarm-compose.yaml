version: '3.7'

networks:
  chainpoint:

secrets:
  HOT_WALLET_PASS:
    external: true
  SESSION_SECRET:
    external: true
  HOT_WALLET_ADDRESS:
    external: true
  ECDSA_PKPEM:
    external: true

services:
  abci:
    image: gcr.io/chainpoint-registry/github_chainpoint_chainpoint-core/go-abci-service:${DOCKER_TAG:-latest}
    depends_on:
      - postgres
    user: ${USERID}:${GROUPID}
    environment:
      SET_OPTION_KEY: ''
      SET_OPTION_VAL: ''
      PEERS: ${PEERS}
      SEEDS: ${SEEDS}
      AGGREGATOR_WHITELIST: ${AGGREGATOR_WHITELIST}
      AGGREGATOR_PUBLIC: 'false'
      CHAINPOINT_CORE_BASE_URI: ${CHAINPOINT_CORE_BASE_URI}
      SUBMIT_HASH_PRICE_SAT: ${SUBMIT_HASH_PRICE_SAT:-2}
      HOT_WALLET_ADDRESS: DOCKER-SECRET->HOT_WALLET_ADDRESS
      HOT_WALLET_PASS: DOCKER-SECRET->HOT_WALLET_PASS
      TENDERMINT_HOST: 127.0.0.1
      TENDERMINT_PORT: 26657
      NETWORK: ${NETWORK:-testnet}
      ELECTION: 'reputation'
      ANCHOR: 'true'
      NODE_MANAGEMENT: 'true'
      AGGREGATE: 'true'
      AGGREGATION_THREADS: '4'
      HASHES_PER_MERKLE_TREE: '25000'
      ANCHOR_INTERVAL: '60'
      LOG_FILTER: 'main:debug,state:info,*:error'
      LOG_LEVEL: 'info'
      ANCHOR_TIMEOUT: '30'
      LN_STAKE: '100000'
      ANCHOR_REWARD: '0'
      BTC_FEE_MULTIPLIER: '2.5'
      SESSION_SECRET: DOCKER-SECRET->SESSION_SECRET
      LND_MACAROON: ${LND_MACAROON}
      LND_TLS_CERT: ${LND_TLS_CERT}
    secrets:
      - ECDSA_PKPEM
      - HOT_WALLET_ADDRESS
      - HOT_WALLET_PASS
      - SESSION_SECRET
    volumes:
      - ~/.chainpoint/core/config/node_1:/tendermint/config
      - ~/.chainpoint/core/config/node_1/data:/tendermint/data
      - ~/.chainpoint/core/.lnd:/root/.lnd:z
    ports:
      - target: 26656
        published: 26656
        protocol: tcp
        mode: host
      - target: 26657
        published: 26657
        protocol: tcp
        mode: host
      - target: 8080
        published: 80
        protocol: tcp
        mode: host
    deploy:
      mode: global
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 15
        window: 90s
    networks:
      - chainpoint
    logging:
      driver: 'json-file'
      options:
        max-size: '1g'
        max-file: '5'

  lnd:
    image: tierion/lnd:${NETWORK:-testnet}-11.1
    user: ${USERID}:${GROUPID}
    entrypoint: 'rm /root/.lnd/tls.* || echo "tls certs already removed" && ./start-lnd.sh'
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 9735
        published: 9735
        protocol: tcp
        mode: host
      - target: 10009
        published: 10009
        protocol: tcp
        mode: host
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 15
        window: 90s
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 5G
    environment:
      - PUBLICIP=${CORE_PUBLIC_IP_ADDRESS}
      - NETWORK=${NETWORK:-testnet}
      - CHAIN
      - DEBUG
      - BACKEND=neutrino
      - NEUTRINO
      - RPCHOST
      - RPCUSER
      - RPCPASS
      - BACKEND_RPC_PORT
      - BITCOIND_ZMQPUBRAWBLOCK_PORT=28332
      - BITCOIND_ZMQPUBRAWTX_PORT=28333
      - LND_REST_PORT
      - LND_RPC_PORT
      - TLSPATH
      - TLSEXTRADOMAIN=lnd
    volumes:
      - ~/.chainpoint/core/.lnd:/root/.lnd:z
    networks:
      - chainpoint
    logging:
      driver: 'json-file'
      options:
        max-size: '1g'
        max-file: '5'

  # Lightning Monitor
  # Monitor and report on the state of LND invoices.
  #
  lnd-mon:
    image: gcr.io/chainpoint-registry/github_chainpoint_chainpoint-core/node-lnd-mon-service:${DOCKER_TAG:-latest}
    user: ${USERID}:${GROUPID}
    depends_on:
      - redis
    networks:
      - chainpoint
    secrets:
      - HOT_WALLET_PASS
    environment:
      NODE_ENV: ${NODE_ENV}
      NETWORK: ${NETWORK:-testnet}
      HOT_WALLET_PASS: DOCKER-SECRET->HOT_WALLET_PASS
      LND_SOCKET: ${LND_SOCKET}
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 15
        window: 90s
    volumes:
      - ~/.chainpoint/core/.lnd:/root/.lnd:z
    tty: true
    logging:
      driver: 'json-file'
      options:
        max-size: '1g'
        max-file: '5'

  # Redis
  #
  redis:
    image: redis:4.0.9
    user: ${USERID}:${GROUPID}
    ports:
      - '6379'
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ~/.chainpoint/core/data/redis:/data
    networks:
      - chainpoint
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 15
        window: 90s
    logging:
      driver: 'json-file'
      options:
        max-size: '1g'
        max-file: '5'

  # Postgres
  #
  # See : https://hub.docker.com/_/postgres/
  # Note: Connect locally on OS X:
  #
  # Installs local client 'psql'
  #   brew install postgres
  #
  # Connect (uname/pass chainpoint/chainpoint):
  #   psql -h 127.0.0.1 -U chainpoint
  #
  postgres:
    image: postgres:11.2
    user: ${USERID}:${GROUPID}
    volumes:
      - ~/.chainpoint/core/data/postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: chainpoint
      POSTGRES_PASSWORD: chainpoint
    ports:
      - '5433:5432'
    networks:
      - chainpoint
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 15
        window: 90s
    logging:
      driver: 'json-file'
      options:
        max-size: '1g'
        max-file: '5'
