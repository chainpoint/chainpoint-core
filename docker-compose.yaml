version: '3.4'

networks:
  chainpoint:
    driver: bridge

services:
  # Tendermint and ABCI app in go. Coordinates the calendar
  abci:
    image: gcr.io/chainpoint-registry/github_chainpoint_chainpoint-core/go-abci-service:${DOCKER_TAG}
    build:
      context: .
      dockerfile: docker/Dockerfile.abci
    user: ${USERID}:${GROUPID}
    environment:
      PEERS: ${PEERS}
      CHAINPOINT_CORE_BASE_URI: ${CHAINPOINT_CORE_BASE_URI}
      HOT_WALLET_PASS: ${HOT_WALLET_PASS}
      HOT_WALLET_ADDRESS: ${HOT_WALLET_ADDRESS}
      TENDERMINT_HOST: 127.0.0.1
      TENDERMINT_PORT: 26657
      NETWORK: ${NETWORK:-testnet}
      AUDIT: 'true'
      NODE_MANAGEMENT: 'true'
      ANCHOR: 'true'
      AGGREGATE: 'true'
      AGGREGATION_THREADS: '4'
      HASHES_PER_MERKLE_TREE: '25000'
      ANCHOR_INTERVAL: '3'
      LOG_FILTER: 'main:debug,state:info,*:error'
      LOG_LEVEL: 'info'
      ANCHOR_TIMEOUT: '10'
      LN_STAKE: '10000'
      SESSION_SECRET: ${SESSION_SECRET}
      LND_MACAROON: ${LND_MACAROON}
      LND_TLS_CERT: ${LND_TLS_CERT}
    volumes:
      - ~/.chainpoint/core/config/node_1:/tendermint/config:Z
      - ~/.chainpoint/core/config/node_1/data:/tendermint/data:Z
      - ~/.chainpoint/core/data/keys/ecdsa_key.pem:/run/secrets/ECDSA_PKPEM
      - ~/.chainpoint/core/.lnd:/root/.lnd:z
    ports:
      - '26656:26656'
      - '26657:26657'
    command: bash -c "abci-service"
    networks:
      - chainpoint

  # Lightning node
  lnd:
    image: tierion/lnd:${NETWORK:-testnet}-11.1.2
    user: ${USERID}:${GROUPID}
    restart: always
    entrypoint: './start-lnd.sh'
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 9735
        published: 9735
        protocol: tcp
        mode: host
      - target: 10009
        published: 10009
        protocol: tcp
        mode: host
    environment:
      - PUBLICIP=${CORE_PUBLIC_IP_ADDRESS}
      - HOT_WALLET_ADDRESS=${HOT_WALLET_ADDRESS}
      - RPCUSER
      - RPCPASS
      - NETWORK=${NETWORK:-testnet}
      - CHAIN
      - DEBUG
      - BACKEND=neutrino
      - NEUTRINO
      - LND_REST_PORT
      - LND_RPC_PORT
      - TLSPATH
      - TLSEXTRADOMAIN=lnd
    volumes:
      - ~/.chainpoint/core/.lnd:/root/.lnd:z
    networks:
      - chainpoint

  # Redis
  #
  redis:
    restart: always
    image: redis:4.0.9
    container_name: redis-core
    user: ${USERID}:${GROUPID}
    ports:
      - '6382:6379'
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ~/.chainpoint/core/data/redis:/data:Z
    networks:
      - chainpoint
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf

  # Postgres
  #
  # See : https://hub.docker.com/_/postgres/
  # Note: Connect locally on OS X:
  #
  # Installs local client 'psql'
  #   brew install postgres
  #
  # Connect (uname/pass chainpoint/chainpoint):
  #   psql -h 127.0.0.1 -U chainpoint
  #
  postgres:
    restart: always
    image: postgres:11.2
    container_name: postgres-core
    user: ${USERID}:${GROUPID}
    volumes:
      - ~/.chainpoint/core/data/postgresql:/var/lib/postgresql/data:Z
    environment:
      POSTGRES_USER: chainpoint
      POSTGRES_PASSWORD: chainpoint
    ports:
      - '5433:5432'
    networks:
      - chainpoint
